self.p_int[1] = 2 
self.p_int[3] = 3 
self.p_int[0] = 4 
self.p_int[2] = 9 
self.p_bool[1] = False 
self.p_node[3] = Node(self.p_int[0], self.p_bool[1]) 
self.p_bool[1] = True 
self.p_int[0] = 7 
self.p_node[0] = Node(self.p_int[2], self.p_bool[1]) 
self.p_bool[1] = False 
self.p_node[2] = Node(self.p_int[1], self.p_bool[1]) 
self.p_int[2] = 1 
self.p_int[1] = 4 
self.p_tree[0] = RedBlackTree() 
self.p_bool[0] = False 
self.p_node[1] = Node(self.p_int[1], self.p_bool[0]) 
print self.p_tree[0] 
self.p_int[1] = 8 
print self.p_tree[0] 
self.p_bool[0] = True 
self.p_tree[0].add(self.p_node[1]) 
self.p_tree[0] = RedBlackTree() 
self.p_tree[0].search(self.p_node[2]) 
self.p_bool[1] = False 
self.p_node[2] = Node(self.p_int[1], self.p_bool[0]) 
self.p_int[1] = 3 
self.p_node[1] = Node(self.p_int[3], self.p_bool[0]) 
print self.p_tree[0] 
self.p_tree[0].delete(self.p_node[3])  
